# this is the build file for project 
# it is autogenerated by the xmake build system.
# do not edit by hand.

# project
cmake_minimum_required(VERSION 3.15.0)
cmake_policy(SET CMP0091 NEW)
project(motherload LANGUAGES CXX)

# target
add_executable(motherload "")
set_target_properties(motherload PROPERTIES OUTPUT_NAME "motherload")
set_target_properties(motherload PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/release")
target_include_directories(motherload SYSTEM PRIVATE
    C:/Users/alexa/AppData/Local/.xmake/packages/l/libsdl3/3.2.8/62012460da7249138370f2fef3e5da21/include
    C:/Users/alexa/AppData/Local/.xmake/packages/o/opengl-headers/2024.01.04/5c160b189b0f44b7b5a264574cabe9fc/include
    C:/Users/alexa/AppData/Local/.xmake/packages/e/egl-headers/2023.12.16/2edf6706c2074d9ca82a537077de57d7/include
)
target_compile_options(motherload PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-DNDEBUG>
    $<$<COMPILE_LANGUAGE:CXX>:-DNDEBUG>
    $<$<COMPILE_LANGUAGE:CUDA>:-DNDEBUG>
)
if(MSVC)
    target_compile_options(motherload PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(motherload PRIVATE -fexceptions)
    target_compile_options(motherload PRIVATE -fcxx-exceptions)
elseif(Gcc)
    target_compile_options(motherload PRIVATE -fexceptions)
endif()
set_target_properties(motherload PROPERTIES CXX_EXTENSIONS OFF)
foreach(standard 26 23 20 17 14 11 98)
    include(CheckCXXCompilerFlag)
    if(MSVC)
        check_cxx_compiler_flag("/std:c++${standard}" motherload_support_c++_standard_${standard})
    else()
        check_cxx_compiler_flag("-std=c++${standard}" motherload_support_c++_standard_${standard})
    endif()
    if(motherload_support_c++_standard_${standard})
        target_compile_features(motherload PRIVATE cxx_std_${standard})
        break()
    endif()
endforeach()
if(MSVC)
    target_compile_options(motherload PRIVATE $<$<CONFIG:Release>:-O2>)
else()
    target_compile_options(motherload PRIVATE -O3)
endif()
if(MSVC)
else()
    target_compile_options(motherload PRIVATE -fvisibility=hidden)
endif()
if(MSVC)
    set_property(TARGET motherload PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(motherload PRIVATE
    SDL3-static
    user32
    gdi32
    winmm
    imm32
    ole32
    oleaut32
    version
    uuid
    advapi32
    setupapi
    shell32
)
target_link_directories(motherload PRIVATE
    C:/Users/alexa/AppData/Local/.xmake/packages/l/libsdl3/3.2.8/62012460da7249138370f2fef3e5da21/lib
)
target_sources(motherload PRIVATE
    src/game/application.cpp
    src/game/components/component.cpp
    src/game/systems/movement_system.cpp
    src/game/systems/render_system.cpp
    src/game/systems/system.cpp
    src/game/texture_registry.cpp
    src/game/world.cpp
    src/main.cpp
)

# target
add_executable(test "")
set_target_properties(test PROPERTIES OUTPUT_NAME "test")
set_target_properties(test PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/release")
target_include_directories(test SYSTEM PRIVATE
    C:/Users/alexa/AppData/Local/.xmake/packages/l/libsdl3/3.2.8/62012460da7249138370f2fef3e5da21/include
    C:/Users/alexa/AppData/Local/.xmake/packages/o/opengl-headers/2024.01.04/5c160b189b0f44b7b5a264574cabe9fc/include
    C:/Users/alexa/AppData/Local/.xmake/packages/e/egl-headers/2023.12.16/2edf6706c2074d9ca82a537077de57d7/include
    C:/Users/alexa/AppData/Local/.xmake/packages/c/catch2/v3.8.0/ffc5e686c6a4479cad346c2105a00874/include
)
target_compile_options(test PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-DNDEBUG>
    $<$<COMPILE_LANGUAGE:CXX>:-DNDEBUG>
    $<$<COMPILE_LANGUAGE:CUDA>:-DNDEBUG>
)
if(MSVC)
    target_compile_options(test PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test PRIVATE -fexceptions)
    target_compile_options(test PRIVATE -fcxx-exceptions)
elseif(Gcc)
    target_compile_options(test PRIVATE -fexceptions)
endif()
set_target_properties(test PROPERTIES CXX_EXTENSIONS OFF)
foreach(standard 26 23 20 17 14 11 98)
    include(CheckCXXCompilerFlag)
    if(MSVC)
        check_cxx_compiler_flag("/std:c++${standard}" test_support_c++_standard_${standard})
    else()
        check_cxx_compiler_flag("-std=c++${standard}" test_support_c++_standard_${standard})
    endif()
    if(test_support_c++_standard_${standard})
        target_compile_features(test PRIVATE cxx_std_${standard})
        break()
    endif()
endforeach()
if(MSVC)
    target_compile_options(test PRIVATE $<$<CONFIG:Release>:-O2>)
else()
    target_compile_options(test PRIVATE -O3)
endif()
if(MSVC)
else()
    target_compile_options(test PRIVATE -fvisibility=hidden)
endif()
if(MSVC)
    set_property(TARGET test PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(test PRIVATE
    SDL3-static
    Catch2Main
    Catch2
    user32
    gdi32
    winmm
    imm32
    ole32
    oleaut32
    version
    uuid
    advapi32
    setupapi
    shell32
)
target_link_directories(test PRIVATE
    C:/Users/alexa/AppData/Local/.xmake/packages/l/libsdl3/3.2.8/62012460da7249138370f2fef3e5da21/lib
    C:/Users/alexa/AppData/Local/.xmake/packages/c/catch2/v3.8.0/ffc5e686c6a4479cad346c2105a00874/lib
)
target_link_options(test PRIVATE
    -subsystem:console
)
target_sources(test PRIVATE
    src/game/application.cpp
    src/game/components/component.cpp
    src/game/systems/movement_system.cpp
    src/game/systems/render_system.cpp
    src/game/systems/system.cpp
    src/game/texture_registry.cpp
    src/game/world.cpp
    tests/world.cpp
)

